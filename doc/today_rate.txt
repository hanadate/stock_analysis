"X1"
"PreD" "2"
"XLK*" "0.20"
"XLF*" "0.06"
"XLE*" "0.24"
"XLB-" "0.05"
"XLI-" "0.06"
"XLY-" "0.11"
"XLV*" "0.03"
"XLP-" "0.04"
"XLU-" "0.13"
"TLT*" "0.05"
"zero" "0.03"

Tech XLK x3= TECL
Fin  XLF x3= FAS
Ind  XLI
Bas  XLB
Cons XLY
Ene  XLE x2= ERX
Heal XLV x3= CURE
Util XLU
Stap XLP
Trea TLT x3= TMF
SPSh SH x3=SPXS
Zero zero
# Note: Sell fast Leveraged ETFs. It must decay in a long term.
# Pre: 19:00-22:30/20:00-23:30, EST 06:00-09:30.
# Market: 22:30-05:00/23:30-06:00, EST 09:30-16:00.
# After: 05:00-09:00/06:00-10:00, EST 16:00-20:00.

START: 2025-01-23 06:05:18
END: 2025-01-23 11:17:43
MIN DATE: 2006-12-01
MAX DATE: 2025-01-22
DIM: 4563x4579
===2 days===
AUC: 0.999998462840412
Accuracy: 0.996711247533436
eta : c(0.05, 0.05)
max_depth : c(6, 8)
gamma : c(0, 0)
colsample_bytree : c(0.4, 0.4)
min_child_weight : c(1, 1)
subsample : c(1, 1)
nrounds : c(100, 100)
logLoss : c(2.1, 2.06)
logLossSD : c(0.03, 0.03)
nrounds : 100
max_depth : 8
eta : 0.05
gamma : 0
colsample_bytree : 0.4
min_child_weight : 1
subsample : 1
===trainControl===
method : repeatedcv
number : 10
repeats : 2
search : random
p : 0.75
initialWindow : NULL
horizon : 1
fixedWindow : TRUE
skip : 0
verboseIter : TRUE
returnData : TRUE
returnResamp : final
savePredictions : FALSE
classProbs : TRUE
summaryFunction : function (data, lev = NULL, model = NULL) 
{
    if (is.null(lev)) 
        stop("'lev' cannot be NULL")
    if (!all(lev %in% colnames(data))) 
        stop("'data' should have columns consistent with 'lev'")
    if (!all(sort(lev) %in% sort(levels(data$obs)))) 
        stop("'data$obs' should have levels consistent with 'lev'")
    dataComplete <- data[complete.cases(data), ]
    probs <- as.matrix(dataComplete[, lev, drop = FALSE])
    logLoss <- ModelMetrics::mlogLoss(dataComplete$obs, probs)
    c(logLoss = logLoss)
}
selectionFunction : tolerance
preProcOptions : list(thresh = 0.95, ICAcomp = 3, k = 5, freqCut = 19, uniqueCut = 10, cutoff = 0.9)
sampling : NULL
index : NULL
indexOut : NULL
indexFinal : NULL
timingSamps : 0
predictionBounds : c(FALSE, FALSE)
seeds : NA
adaptive : list(min = 5, alpha = 0.05, method = "gls", complete = TRUE)
trim : FALSE
allowParallel : TRUE
===tuneGrid===
nrounds : c(100, 100)
max_depth : c(6, 8)
eta : c(0.05, 0.05)
gamma : c(0, 0)
colsample_bytree : c(0.4, 0.4)
min_child_weight : c(1, 1)
subsample : c(1, 1)
